service:
- docker

env:
  global:
    TERM=dumb

language: java
jdk: oraclejdk8

addons:
  apt:
    update: true
    packages:
    - docker-ce
    - python-pip
    - curl
    - jq
    - libxml2-utils
    - libappindicator1
    - fonts-liberation
    - google-chrome-stable

install: true
before_install:
- sudo pip install docker-compose httpie >/dev/null
# frontend tests
- export CHROME_BIN=/usr/bin/google-chrome
- export DISPLAY=:99.0
- sh -e /etc/init.d/xvfb start
# kill ports
- source <(curl -fsSL https://raw.github.com/daggerok/bash-functions/master/main.bash)
- stop_any 5672 5432 27017 9200 9300 5601 8000 8001 8002 8080 80

script:
- ./gradlew clean build asciidoctor
- export root=$(pwd)

- cd ${root}/webjars-materializecss-1.0.0-rc.2
- ./mvnw
- bash target/*.jar &
- wait_for 8080
- http :8080/
- stop_any 8080
- ./gradlew
- bash build/libs/*.jar &
- wait_for 8080
- http :8080/
- stop_any 8080

- cd ${root}/axon-vote
- ./mvnw
- bash target/*.jar &
- wait_for 8080
- http :8080/api/v1/registration id=my-vote name=my=vote
- http put http://localhost:8080/api/v1/registration/approve/my-vote
- http post http://localhost:8080/api/v1/vote/my-vote electorId=dag
- http post http://localhost:8080/api/v1/vote/my-vote electorId=max
- http :8080
- stop_any 8080

#- cd ${root}/axon-chat
#- rm -rf build target
#- ./gradlew
#- java -jar build/libs/*.jar &
#- wait_for 8080
#- http :8080/api/room
#- http :8080/api/room roomId=my-room
#- http :8080/api/room/my-room
#- http put :8080/api/room/my-room/max
#- http put :8080/api/room/my-room/valery
#- http :8080/api/member
#- http delete :8080/api/room/my-room/max
#- http delete :8080/api/room/my-room/valery
#- http :8080/my-room
#- stop_any 8080
#- rm -rf build target
#- ./mvnw
#- java -jar target/*.jar &
#- wait_for 8080
#- http :8080/api/room
#- http :8080/api/room roomId=my-room
#- http :8080/api/room/my-room
#- http put :8080/api/room/my-room/max
#- http put :8080/api/room/my-room/valery
#- http :8080/api/member
#- http delete :8080/api/room/my-room/max
#- http delete :8080/api/room/my-room/valery
#- http :8080/my-room
#- stop_any 8080
#
#- cd ${root}/axon-counter
#- ./mvnw
#- java -jar target/*.jar &
#- wait_for 8080
#- http post :8080/api/v1/counter\? counterId=c
#- http put  :8080/api/v1/counter/c/enable
#- http post :8080/api/v1/counter/c/increment
#- http post :8080/api/v1/counter/c/decrement\?amount=2
#- http get  :8080
#- http get  :8080\?collection=events
#- stop_any 8080

- cd ${root}/axon-lock
- ./gradlew
- ./gradlew -b axon-app/build.gradle
- ./gradlew -b reactive-client/build.gradle
- ./gradlew -b es-client/build.gradle
- stop_any 8080 8000 80
- java -jar axon-app/build/libs/*.jar &
- wait_for 8080
- java -jar reactive-client/build/libs/*.jar --server.port=8000 &
- java -jar es-client/build/libs/*.jar --server.port=8888 &
- wait_for 8000 8080 8888
- http :8080/api/v1/entrance/register entranceId=main
- curl localhost:8000 &
- http --stream --timeout=123456 :8000 &
- http :8080/api/v1/guest/register name=max
- http put http://localhost:8080/api/v1/entrance/main/unlock
- http :8080/api/v1/entrance/register entranceId=reception
- http put http://localhost:8080/api/v1/entrance/reception/unlock
- http :8080/api/v1/guest/register name=max
- http delete http://localhost:8080/api/v1/entrance/reception
- http delete http://localhost:8080/api/v1/entrance/main
- sleep 1
- stop_any 8080 8000 80

- cd ${root}/http-integration-java-dsl
- ./gradlew
- java -jar server/build/libs/*.jar &
- java -jar client/build/libs/*.jar &
- wait_for 8000 8080
- http :8080 message=hi!
- http :8080/upper-cased message=hi!
- http :8080/url-encoded message=hi!
- http :8080/jsoned message=hi!
- http :8000 ololo=trololo
- http :8000/map nif=naf nuf=poh
- http :8000/split-aggregate kk=vv k1=v1 k=v
- stop_any 8080 8000 8888

# axon-app
- cd ${root}/axon-app
# gradle
- ./gradlew clean build
- java -jar ./build/libs/*.jar &
- wait_for 8080
- http post :8080/api/v1/orders
- http post :8080/api/v1/orders
- http get :8080/order-query
- stop_any 8080
# maven docker
- ./mvnw
- docker-compose build --force-rm --no-cache --pull
- docker-compose up --force-recreate --remove-orphans &
- sleep 30
- http post :8080/api/v1/orders
- http post :8080/api/v1/orders
- http get :8080/order-query
- docker-compose down -v

- >
  for path in \
    http-integration-java-dsl \
    jax-rs-security \
    jax-rs \
    user-management-es-cqrs \
    axon-complains \
    axon-banking \
    cqrs-and-eventsourcing \
    wro4j \
    retry \
    sse-emitter \
    spring-boot-under-the-hood \
    ;
  do
    export TARGET="${root}/$path"
    cd $TARGET
    ./gradlew clean build
  done;
