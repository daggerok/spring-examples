sudo: required
group: travis_lts
service:
- docker
env:
  global:
    TERM=dumb
language: java
jdk:
- openjdk8
- oraclejdk8
install: true
before_install:
# docker-compose, curl, jq, httpie
- sudo apt update -y || true
- sudo apt install -y --no-install-recommends docker-ce curl jq libxml2-utils python-pip
- sudo pip install docker-compose httpie

# frontend tests
- export CHROME_BIN=/usr/bin/google-chrome
- export DISPLAY=:99.0
- sh -e /etc/init.d/xvfb start
- sudo apt install -y libappindicator1 fonts-liberation
- wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
- sudo dpkg -i google-chrome*.deb

# kill ports
- source <(curl -fsSL https://raw.github.com/daggerok/bash-functions/master/main.bash)
- stop_any 5672 5432 27017 9200 9300 5601 8001 8002 8080 80

script:
- bash gradlew clean build deploy
- export ROOT=$PWD

- cd ${ROOT}/axon-counter
- bash mvnw
- java -jar target/*.jar &
- wait_for 8080
- http post :8080/api/v1/counter\? counterId=c
- http put  :8080/api/v1/counter/c/enable
- http post :8080/api/v1/counter/c/increment
- http post :8080/api/v1/counter/c/decrement\?amount=2
- http get  :8080
- http get  :8080\?collection=events
- stop_any 8080

- cd ${ROOT}/axon-lock
- bash gradlew
- bash gradlew -b reactive-client/build.gradle
- bash gradlew -b es-client/build.gradle
- java -jar axon-app/build/libs/*.jar &
- wait_for 8080
- java -jar reactive-client/build/libs/*.jar --server.port=8000 &
- java -jar es-client/build/libs/*.jar --server.port=8888 &
- wait_for 8000 8888
- http :8080/api/v1/entrance/register entranceId=main
- curl localhost:8000 &
- http --stream --timeout=123456 :8000 &
- http :8080/api/v1/guest/register name=max
- http put http://localhost:8080/api/v1/entrance/main/unlock
- http :8080/api/v1/entrance/register entranceId=reception
- http put http://localhost:8080/api/v1/entrance/reception/unlock
- http :8080/api/v1/guest/register name=max
- http delete http://localhost:8080/api/v1/entrance/reception
- http delete http://localhost:8080/api/v1/entrance/main
- sleep 1
- stop_any 8080 8000

- cd ${ROOT}/http-integration-java-dsl
- bash gradlew
- java -jar server/build/libs/*.jar &
- java -jar client/build/libs/*.jar &
- wait_for 8000 8080
- http :8080 message=hi!
- http :8080/upper-cased message=hi!
- http :8080/url-encoded message=hi!
- http :8080/jsoned message=hi!
- http :8000 ololo=trololo
- http :8000/map nif=naf nuf=poh
- http :8000/split-aggregate kk=vv k1=v1 k=v
- stop_any 8080 8000 8888

# axon-app
- cd ${ROOT}/axon-app
# gradle
- bash gradlew clean build
- java -jar ./build/libs/*.jar &
- wait_for 8080
- http post :8080/api/v1/orders
- http post :8080/api/v1/orders
- http get :8080/order-query
- stop_any 8080
# maven docker
- bash mvnw
- docker-compose build --force-rm --no-cache --pull
- docker-compose up --force-recreate --remove-orphans &
- sleep 30
- http post :8080/api/v1/orders
- http post :8080/api/v1/orders
- http get :8080/order-query
- docker-compose down -v

- >
  for path in \
    http-integration-java-dsl \
    jax-rs-security \
    jax-rs \
    user-management-es-cqrs \
    axon-complains \
    axon-banking \
    cqrs-and-eventsourcing \
    wro4j \
    retry \
    sse-emitter \
    spring-boot-under-the-hood \
    ;
  do
    export TARGET="$ROOT/$path"
    cd $TARGET
    bash gradlew clean build
  done;
