buildscript {
  ext {
    javaVersion = "1.8"
    vavrVersion = "0.9.2"
    kotlinVersion = "1.2.21"
  }
  repositories {
    mavenLocal()
    mavenCentral()
  }
  dependencies {
    classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
  }
}

plugins {
  id "idea"
  id "eclipse"
  id "com.avast.gradle.docker-compose" version "0.6.13"
}

allprojects { p ->

  apply plugin: "base"
  apply plugin: "maven"

  group = "daggerok"
  version = "0.0.1"

  defaultTasks "clean", "build"

  task wrapper(type: Wrapper) {
    gradleVersion = "4.5.1"
    distributionType = "ALL"
  }

  clean {
    delete "$p.projectDir/out"
  }
}

subprojects {

  apply plugin: "java"
  apply plugin: "kotlin"

  sourceCompatibility = targetCompatibility = "$javaVersion"

  repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
  }

  dependencies {
    compile("io.vavr:vavr:$vavrVersion")
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion") {
      exclude module: "kotlin-stdlib-jdk7"
    }
    testCompile("org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion")
    testCompile("org.jetbrains.kotlin:kotlin-test:$kotlinVersion") {
      exclude module: "kotlin-stdlib"
    }
  }

  compileKotlin {
    kotlinOptions {
      jvmTarget = "$javaVersion"
    }
  }

  compileTestKotlin {
    kotlinOptions {
      jvmTarget = "$javaVersion"
    }
  }
}

dockerCompose {
  useComposeFiles = [project.file("docker-compose.yaml")]
  // captureContainersOutput = true
  captureContainersOutput = false
  stopContainers = true
  removeContainers = true
  removeImages = "Local"
  removeVolumes = true
  removeOrphans = true
  forceRecreate = true
  waitForTcpPorts = false
  projectName = project.name
}

composeUp.dependsOn assemble
