buildscript {
  ext {
    springBootVersion = "1.5.7.RELEASE"
  }
}

plugins {
  id "java"
  id "idea"
  id "eclipse"
  // gradle dependencyUpdates -Drevision=release
  id "com.github.ben-manes.versions" version "0.15.0"
  id "org.springframework.boot" version "1.5.7.RELEASE" apply false
}

allprojects {

  apply plugin: "java"

  group = "daggerok"
  version = "0.0.1"
  sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

  repositories {
    mavenCentral()
  }
}

subprojects { subproject ->

  if (isDocker(subproject)) return

  apply plugin: "org.springframework.boot"

  dependencies {
    compileOnly("org.projectlombok:lombok")
    compile("io.vavr:vavr:0.9.1")
    runtime("org.springframework.boot:spring-boot-devtools")
    testCompile("org.springframework.boot:spring-boot-starter-test")
  }

  springBoot.executable = true

  [test, build, bootRun].each { t ->
    t.dependsOn assemble, ":docker:composeUp"
    t.shouldRunAfter assemble, ":docker:composeUp"
    t.finalizedBy ":docker:composeDown"
  }
}

def isDocker(Project p) {
  def absPath = p.projectDir.absolutePath
  def projectPath = absPath.replaceFirst(rootDir.absolutePath, "")
  projectPath.contains("docker")
}

wrapper {
  gradleVersion = "4.2"
}
